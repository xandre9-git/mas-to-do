(()=>{"use strict";var e={28:(e,n,t)=>{t.d(n,{Z:()=>b});var o=t(537),r=t.n(o),a=t(645),c=t.n(a),i=t(667),s=t.n(i),d=new URL(t(776),t.b),l=new URL(t(35),t.b),A=new URL(t(666),t.b),p=c()(r()),u=s()(d),g=s()(l),f=s()(A);p.push([e.id,'* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  /* border: 1px solid black; */\n}\n\n@font-face {\n  font-family: "Oswald";\n  src: url('+u+'), format(\'ttf\');\n  font-weight: normal;\n  font-style: normal;\n}\n\nhtml, \nbody {\n  font: 1em "Oswald", monospace;\n  /* background-color: gold; */\n}\n\nbutton {\n  background: none;\n  border: none;\n}\n\n#content {\n  display: grid;\n  grid-template-rows: 1fr 15fr;\n  height: 100vh;\n  grid-template-areas: \n    "a a a a"\n    "b b b b"\n    "b b b b"\n    "b b b b ";\n}\n\n#top-bar {\n  grid-area: a;\n  /* height: 50px; */\n  width: 100%;\n  background-color: gold;\n}\n\n#left-side-bar {\n  grid-area: b;\n  width: 18vw;\n  background-color: dodgerblue;\n}\n\n#projects-title {\n  color: gold;\n  font-size: 2em;\n  text-align: center;\n  padding-top: 10;\n}\n\n#projects-container {\n  height: 100%;\n}\n\n.add-projects, .added-projects {\n  display: flex;\n  justify-content: space-between;\n  padding-left: 5%;\n  align-items: center;\n}\n\n\n.project-btns {\n  display: flex;\n  align-items: center;\n}\n\n.project-btns-container {\n  display: flex;\n}\n\n#del-btn, #edit-btn {\n  height: 24px;\n  width: 24px;\n  background: none;\n}\n\n.added-projects:hover #del-btn {\n  background-image: url('+g+");\n  background-size: 100% 100%;  \n}\n\n.added-projects:hover #edit-btn {\n  background-image: url("+f+");\n  background-size: 100% 100%;  \n}\n\n.add-projects, .added-projects, .project-btns {\n  color: white;\n  cursor: pointer;\n  font-size: 1.25em;\n}\n\n\n.filter-white {\n  filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(125deg) brightness(100%) contrast(102%);\n}\n\n.title {\n  color: dodgerblue;\n  padding-left: 2.5%;\n}\n\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,6BAA6B;AAC/B;;AAEA;EACE,qBAAqB;EACrB,2DAAqD;EACrD,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;;EAEE,6BAA6B;EAC7B,4BAA4B;AAC9B;;AAEA;EACE,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,4BAA4B;EAC5B,aAAa;EACb;;;;cAIY;AACd;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,WAAW;EACX,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,4BAA4B;AAC9B;;AAEA;EACE,WAAW;EACX,cAAc;EACd,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,gBAAgB;EAChB,mBAAmB;AACrB;;;AAGA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,yDAA4C;EAC5C,0BAA0B;AAC5B;;AAEA;EACE,yDAA0C;EAC1C,0BAA0B;AAC5B;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,iBAAiB;AACnB;;;AAGA;EACE,8FAA8F;AAChG;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB",sourcesContent:['* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  /* border: 1px solid black; */\n}\n\n@font-face {\n  font-family: "Oswald";\n  src: url(\'./fonts/Oswald-Regular.ttf\'), format(\'ttf\');\n  font-weight: normal;\n  font-style: normal;\n}\n\nhtml, \nbody {\n  font: 1em "Oswald", monospace;\n  /* background-color: gold; */\n}\n\nbutton {\n  background: none;\n  border: none;\n}\n\n#content {\n  display: grid;\n  grid-template-rows: 1fr 15fr;\n  height: 100vh;\n  grid-template-areas: \n    "a a a a"\n    "b b b b"\n    "b b b b"\n    "b b b b ";\n}\n\n#top-bar {\n  grid-area: a;\n  /* height: 50px; */\n  width: 100%;\n  background-color: gold;\n}\n\n#left-side-bar {\n  grid-area: b;\n  width: 18vw;\n  background-color: dodgerblue;\n}\n\n#projects-title {\n  color: gold;\n  font-size: 2em;\n  text-align: center;\n  padding-top: 10;\n}\n\n#projects-container {\n  height: 100%;\n}\n\n.add-projects, .added-projects {\n  display: flex;\n  justify-content: space-between;\n  padding-left: 5%;\n  align-items: center;\n}\n\n\n.project-btns {\n  display: flex;\n  align-items: center;\n}\n\n.project-btns-container {\n  display: flex;\n}\n\n#del-btn, #edit-btn {\n  height: 24px;\n  width: 24px;\n  background: none;\n}\n\n.added-projects:hover #del-btn {\n  background-image: url(\'./images/delete.svg\');\n  background-size: 100% 100%;  \n}\n\n.added-projects:hover #edit-btn {\n  background-image: url(\'./images/edit.svg\');\n  background-size: 100% 100%;  \n}\n\n.add-projects, .added-projects, .project-btns {\n  color: white;\n  cursor: pointer;\n  font-size: 1.25em;\n}\n\n\n.filter-white {\n  filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(125deg) brightness(100%) contrast(102%);\n}\n\n.title {\n  color: dodgerblue;\n  padding-left: 2.5%;\n}\n\n'],sourceRoot:""}]);const b=p},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},c=[],i=0;i<e.length;i++){var s=e[i],d=o.base?s[0]+o.base:s[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var p=t(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var g=r(u,o);o.byIndex=i,n.splice(i,0,{identifier:A,updater:g,references:1})}c.push(A)}return c}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=t(a[c]);n[i].references--}for(var s=o(e,r),d=0;d<a.length;d++){var l=t(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},776:(e,n,t)=>{e.exports=t.p+"e815068d369177121fd8.ttf"},35:(e,n,t)=>{e.exports=t.p+"3270f2c93c8c138fa6cc.svg"},666:(e,n,t)=>{e.exports=t.p+"5b4bbee2e91b8855115c.svg"}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),a=t(569),c=t.n(a),i=t(565),s=t.n(i),d=t(216),l=t.n(d),A=t(589),p=t.n(A),u=t(28),g={};function f(e,n){let t=function(e){let n=document.createElement("li");n.textContent=e;let t=document.createElement("div");t.className="project-btns-container";let o=document.createElement("div");o.className="project-btns, filter-white",o.id="edit-btn",o.title="Edit";let r=document.createElement("div");return r.className="project-btns",r.id="del-btn",r.className="project-btns filter-white",r.title="Delete",t.appendChild(o),t.appendChild(r),n.appendChild(t),n}(e);if(t.className="added-projects",t.id=t.textContent,""!=t.textContent)return n.prepend(t),console.log(typeof e),console.log(e.projects),n}g.styleTagTransform=p(),g.setAttributes=s(),g.insert=c().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=l(),n()(u.Z,g),u.Z&&u.Z.locals&&u.Z.locals;let b=JSON.parse(window.localStorage.getItem("projectnames"));window.projects=b,JSON.parse(window.localStorage.getItem("projectnames")).length>0?(window.projects=JSON.parse(window.localStorage.getItem("projectnames")),console.log(`Projects array inside JSON parse: ${window.projects}`),console.log("JSON parse section fired.")):b=[];const m=document.getElementById("content"),h=document.createElement("div");h.id="top-bar";const E=document.createElement("h1");E.textContent="Mas To Do",E.className="title";const C=document.createElement("div");C.id="left-side-bar";const v=document.createElement("div");v.id="projects-title",v.textContent="Projects";const B=document.createElement("div");B.id="projects-container";const w=document.createElement("ul");w.id="projects-ul";const j=document.createElement("li");j.className="add-projects",j.textContent="+ Add Project",j.addEventListener("click",(function(){let e=function(){let e=prompt("Enter name of project:");if(null!=e)return e}();console.log(`res value: ${e}`),window.localStorage.setItem("projectname",e),b.length<1&&(b.push(e),window.localStorage.setItem("projectnames",JSON.stringify(b)),console.log("Executed."),f(e,w));for(let n=0;n<b.length;n++)console.log(b.includes(e)),b.includes(e)||(b.push(e),window.localStorage.setItem("projectnames",JSON.stringify(b)),console.log(`Executed as well. Projects now has: ${b}`),f(e,w));console.log(`projects current values: ${b}`),console.log(`projects length: ${b.length}`)}));for(let e=0;e<window.projects.length;e++)console.log(`This calls ${e}`),console.log(window.projects),f(b[e],w);w.appendChild(j),B.appendChild(w),m.appendChild(h),h.appendChild(E),m.appendChild(C),C.appendChild(v),C.appendChild(B)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,