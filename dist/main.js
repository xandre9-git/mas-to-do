(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>b});var o=n(537),r=n.n(o),a=n(645),i=n.n(a),s=n(667),c=n.n(s),d=new URL(n(776),n.b),l=new URL(n(895),n.b),A=new URL(n(35),n.b),p=new URL(n(516),n.b),u=new URL(n(666),n.b),g=i()(r()),m=c()(d),E=c()(l),f=c()(A),h=c()(p),C=c()(u);g.push([e.id,'* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  /* border: 1px solid black; */\n}\n\n@font-face {\n  font-family: "Oswald";\n  src: url('+m+'), format("ttf");\n  font-weight: normal;\n  font-style: normal;\n}\n\nhtml,\nbody {\n  font: 1em "Oswald", monospace;\n  /* background-color: gold; */\n  height: 100%;\n  margin: 0;\n  overflow: hidden;\n}\n\nbutton {\n  background: none;\n  border: none;\n}\n\nul,\nli {\n  list-style-type: none;\n}\n\n#content {\n  display: grid;\n  grid-template-rows: 1fr 15fr;\n  grid-template-columns: 1fr 15fr;\n  height: 100%;\n  grid-template-areas:\n    "a a a a a"\n    "b c c c c"\n    "b c c c c"\n    "b c c c c";\n}\n\n#top-bar {\n  grid-area: a;\n  /* height: 50px; */\n  width: 100%;\n  background-color: gold;\n}\n\n#left-side-bar {\n  grid-area: b;\n  width: 18vw;\n  background-color: dodgerblue;\n}\n\n#to-dos-container {\n  grid-area: c;\n  background-color: lightgreen;\n}\n\n.task-boxes-container {\n  /* gets boxes to align as columns besides each other */\n  display: flex;\n  justify-content: space-around;\n  height: 100%;\n}\n\n.to-do-boxes {\n  background-color: #ffff88;\n  height: 90%;\n  width: 96%;\n  margin: 1% 2% 2% 2%;\n}\n\n.to-do-title {\n  color: palevioletred;\n  margin-left: 2%;\n}\n\n#add-task {\n  margin: 1%;\n  font-size: 2em;\n}\n\n#projects-title {\n  color: gold;\n  font-size: 2em;\n  text-align: center;\n  padding-top: 10;\n}\n\n#current-tasks,\n#task-details {\n  width: 50%;\n}\n\n#add-taskbar {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n#task-input-bar {\n  width: 90%;\n  height: 95%;\n}\n\n#add-task-btn {\n  font-size: 2em;\n}\n\n#task-details > div {\n  background-color: paleturquoise;\n}\n\n#task-details > h2 {\n  color: rgb(141, 92, 190);\n}\n\n#projects-container {\n  height: 100%;\n}\n\n.add-projects,\n.added-projects {\n  display: flex;\n  justify-content: space-between;\n  padding-left: 5%;\n  align-items: center;\n}\n\n.project-btns {\n  display: flex;\n  align-items: center;\n}\n\n.project-btns-container {\n  display: flex;\n}\n\n#edit-btn:hover {\n  /* Adds gold filter */\n  filter: invert(82%) sepia(58%) saturate(2058%) hue-rotate(359deg)\n    brightness(104%) contrast(107%);\n}\n\n#del-btn:hover {\n  /* Adds gold filter */\n  filter: invert(82%) sepia(58%) saturate(2058%) hue-rotate(359deg)\n    brightness(104%) contrast(107%);\n}\n\n#del-btn,\n#edit-btn {\n  height: 24px;\n  width: 24px;\n  background: none;\n}\n\n#detail-btns {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 1%;\n}\n\n#save-btn {\n  height: 24px;\n  width: 24px;\n  background-image: url('+E+");\n  background-size: 100% 100%;\n}\n\n#delete-btn {\n  height: 24px;\n  width: 24px;\n  background-image: url("+f+");\n  background-size: 100% 100%;\n}\n\n#cancel-btn {\n  height: 24px;\n  width: 24px;\n  background-image: url("+h+");\n  background-size: 100% 100%;\n}\n\n.added-projects:hover #del-btn {\n  background-image: url("+f+");\n  background-size: 100% 100%;\n}\n\n.added-projects:hover #edit-btn {\n  background-image: url("+C+");\n  background-size: 100% 100%;\n}\n\n.add-projects,\n.added-projects,\n.project-btns {\n  color: white;\n  cursor: pointer;\n  font-size: 1.25em;\n}\n\n.add-projects:hover {\n  color: gold;\n}\n\nli.added-projects:hover {\n  color: gold;\n}\n\n#add-task {\n  color: rebeccapurple;\n  /* text-decoration: none; */\n}\n\n.task {\n  display: flex;\n  justify-content: space-between;\n  margin-left: 2.5%;\n  margin-right: 2.5%;\n}\n\n.edit-and-checkbox-container {\n  display: flex;\n}\n\n.task-edit-btn, .task-del-btn {\n  background-size: 100% 100%;\n  height: 20px;\n  width: 20px;\n  filter: invert(24%) sepia(19%) saturate(5591%) hue-rotate(250deg) brightness(90%) contrast(92%);\n  padding: 2%;\n  background-image: url("+C+");\n}\n\n#task-edit-btn {\n  background-image: url("+C+");\n}\n\n#task-del-btn {\n  background-image: url("+f+');\n}\n\n#details {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-left: 2%;\n  margin-right: 2%;\n}\n\n#details > h3 {\n  color: hotpink;\n}\n\n#detail-btns {\n  /* rebeccapurple */\n  filter: invert(24%) sepia(17%) saturate(6018%) hue-rotate(249deg) brightness(90%) contrast(93%);\n}\n\nselect {\n  width: auto;\n  box-sizing: border-box;\n}\n\ninput[type="date"], input[type="time"] {\n  width: 120px;\n  box-sizing: border-box;\n}\n\ntextarea#detail-desc {\n  height: 125px;\n  resize: none;\n}\n\n.filter-white {\n  filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(125deg)\n    brightness(100%) contrast(102%);\n}\n\n.title {\n  color: dodgerblue;\n  padding-left: 2.5%;\n}\n\n.checklist-task-item {\n  display: flex;\n  justify-content: space-between;\n  margin-left: 2.5%;\n  margin-right: 2.5%;\n  cursor: pointer;\n}\n\n\n\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,6BAA6B;AAC/B;;AAEA;EACE,qBAAqB;EACrB,2DAAqD;EACrD,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;;EAEE,6BAA6B;EAC7B,4BAA4B;EAC5B,YAAY;EACZ,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,YAAY;AACd;;AAEA;;EAEE,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,4BAA4B;EAC5B,+BAA+B;EAC/B,YAAY;EACZ;;;;eAIa;AACf;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,WAAW;EACX,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,4BAA4B;AAC9B;;AAEA;EACE,YAAY;EACZ,4BAA4B;AAC9B;;AAEA;EACE,sDAAsD;EACtD,aAAa;EACb,6BAA6B;EAC7B,YAAY;AACd;;AAEA;EACE,yBAAyB;EACzB,WAAW;EACX,UAAU;EACV,mBAAmB;AACrB;;AAEA;EACE,oBAAoB;EACpB,eAAe;AACjB;;AAEA;EACE,UAAU;EACV,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,cAAc;EACd,kBAAkB;EAClB,eAAe;AACjB;;AAEA;;EAEE,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,WAAW;AACb;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,YAAY;AACd;;AAEA;;EAEE,aAAa;EACb,8BAA8B;EAC9B,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,qBAAqB;EACrB;mCACiC;AACnC;;AAEA;EACE,qBAAqB;EACrB;mCACiC;AACnC;;AAEA;;EAEE,YAAY;EACZ,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,yBAAyB;EACzB,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,yDAA0C;EAC1C,0BAA0B;AAC5B;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,yDAA4C;EAC5C,0BAA0B;AAC5B;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,yDAA4C;EAC5C,0BAA0B;AAC5B;;AAEA;EACE,yDAA4C;EAC5C,0BAA0B;AAC5B;;AAEA;EACE,yDAA0C;EAC1C,0BAA0B;AAC5B;;AAEA;;;EAGE,YAAY;EACZ,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,oBAAoB;EACpB,2BAA2B;AAC7B;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,0BAA0B;EAC1B,YAAY;EACZ,WAAW;EACX,+FAA+F;EAC/F,WAAW;EACX,yDAA0C;AAC5C;;AAEA;EACE,yDAA0C;AAC5C;;AAEA;EACE,yDAA4C;AAC9C;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,2BAA2B;EAC3B,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,+FAA+F;AACjG;;AAEA;EACE,WAAW;EACX,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,YAAY;AACd;;AAEA;EACE;mCACiC;AACnC;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,iBAAiB;EACjB,kBAAkB;EAClB,eAAe;AACjB",sourcesContent:['* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  /* border: 1px solid black; */\n}\n\n@font-face {\n  font-family: "Oswald";\n  src: url("./fonts/Oswald-Regular.ttf"), format("ttf");\n  font-weight: normal;\n  font-style: normal;\n}\n\nhtml,\nbody {\n  font: 1em "Oswald", monospace;\n  /* background-color: gold; */\n  height: 100%;\n  margin: 0;\n  overflow: hidden;\n}\n\nbutton {\n  background: none;\n  border: none;\n}\n\nul,\nli {\n  list-style-type: none;\n}\n\n#content {\n  display: grid;\n  grid-template-rows: 1fr 15fr;\n  grid-template-columns: 1fr 15fr;\n  height: 100%;\n  grid-template-areas:\n    "a a a a a"\n    "b c c c c"\n    "b c c c c"\n    "b c c c c";\n}\n\n#top-bar {\n  grid-area: a;\n  /* height: 50px; */\n  width: 100%;\n  background-color: gold;\n}\n\n#left-side-bar {\n  grid-area: b;\n  width: 18vw;\n  background-color: dodgerblue;\n}\n\n#to-dos-container {\n  grid-area: c;\n  background-color: lightgreen;\n}\n\n.task-boxes-container {\n  /* gets boxes to align as columns besides each other */\n  display: flex;\n  justify-content: space-around;\n  height: 100%;\n}\n\n.to-do-boxes {\n  background-color: #ffff88;\n  height: 90%;\n  width: 96%;\n  margin: 1% 2% 2% 2%;\n}\n\n.to-do-title {\n  color: palevioletred;\n  margin-left: 2%;\n}\n\n#add-task {\n  margin: 1%;\n  font-size: 2em;\n}\n\n#projects-title {\n  color: gold;\n  font-size: 2em;\n  text-align: center;\n  padding-top: 10;\n}\n\n#current-tasks,\n#task-details {\n  width: 50%;\n}\n\n#add-taskbar {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n#task-input-bar {\n  width: 90%;\n  height: 95%;\n}\n\n#add-task-btn {\n  font-size: 2em;\n}\n\n#task-details > div {\n  background-color: paleturquoise;\n}\n\n#task-details > h2 {\n  color: rgb(141, 92, 190);\n}\n\n#projects-container {\n  height: 100%;\n}\n\n.add-projects,\n.added-projects {\n  display: flex;\n  justify-content: space-between;\n  padding-left: 5%;\n  align-items: center;\n}\n\n.project-btns {\n  display: flex;\n  align-items: center;\n}\n\n.project-btns-container {\n  display: flex;\n}\n\n#edit-btn:hover {\n  /* Adds gold filter */\n  filter: invert(82%) sepia(58%) saturate(2058%) hue-rotate(359deg)\n    brightness(104%) contrast(107%);\n}\n\n#del-btn:hover {\n  /* Adds gold filter */\n  filter: invert(82%) sepia(58%) saturate(2058%) hue-rotate(359deg)\n    brightness(104%) contrast(107%);\n}\n\n#del-btn,\n#edit-btn {\n  height: 24px;\n  width: 24px;\n  background: none;\n}\n\n#detail-btns {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 1%;\n}\n\n#save-btn {\n  height: 24px;\n  width: 24px;\n  background-image: url("./images/save.svg");\n  background-size: 100% 100%;\n}\n\n#delete-btn {\n  height: 24px;\n  width: 24px;\n  background-image: url("./images/delete.svg");\n  background-size: 100% 100%;\n}\n\n#cancel-btn {\n  height: 24px;\n  width: 24px;\n  background-image: url("./images/cancel.svg");\n  background-size: 100% 100%;\n}\n\n.added-projects:hover #del-btn {\n  background-image: url("./images/delete.svg");\n  background-size: 100% 100%;\n}\n\n.added-projects:hover #edit-btn {\n  background-image: url("./images/edit.svg");\n  background-size: 100% 100%;\n}\n\n.add-projects,\n.added-projects,\n.project-btns {\n  color: white;\n  cursor: pointer;\n  font-size: 1.25em;\n}\n\n.add-projects:hover {\n  color: gold;\n}\n\nli.added-projects:hover {\n  color: gold;\n}\n\n#add-task {\n  color: rebeccapurple;\n  /* text-decoration: none; */\n}\n\n.task {\n  display: flex;\n  justify-content: space-between;\n  margin-left: 2.5%;\n  margin-right: 2.5%;\n}\n\n.edit-and-checkbox-container {\n  display: flex;\n}\n\n.task-edit-btn, .task-del-btn {\n  background-size: 100% 100%;\n  height: 20px;\n  width: 20px;\n  filter: invert(24%) sepia(19%) saturate(5591%) hue-rotate(250deg) brightness(90%) contrast(92%);\n  padding: 2%;\n  background-image: url("./images/edit.svg");\n}\n\n#task-edit-btn {\n  background-image: url("./images/edit.svg");\n}\n\n#task-del-btn {\n  background-image: url("./images/delete.svg");\n}\n\n#details {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-left: 2%;\n  margin-right: 2%;\n}\n\n#details > h3 {\n  color: hotpink;\n}\n\n#detail-btns {\n  /* rebeccapurple */\n  filter: invert(24%) sepia(17%) saturate(6018%) hue-rotate(249deg) brightness(90%) contrast(93%);\n}\n\nselect {\n  width: auto;\n  box-sizing: border-box;\n}\n\ninput[type="date"], input[type="time"] {\n  width: 120px;\n  box-sizing: border-box;\n}\n\ntextarea#detail-desc {\n  height: 125px;\n  resize: none;\n}\n\n.filter-white {\n  filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(125deg)\n    brightness(100%) contrast(102%);\n}\n\n.title {\n  color: dodgerblue;\n  padding-left: 2.5%;\n}\n\n.checklist-task-item {\n  display: flex;\n  justify-content: space-between;\n  margin-left: 2.5%;\n  margin-right: 2.5%;\n  cursor: pointer;\n}\n\n\n\n'],sourceRoot:""}]);const b=g},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],s=0;s<e.length;s++){var c=e[s],d=o.base?c[0]+o.base:c[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var p=n(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var g=r(u,o);o.byIndex=s,t.splice(s,0,{identifier:A,updater:g,references:1})}i.push(A)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=n(a[i]);t[s].references--}for(var c=o(e,r),d=0;d<a.length;d++){var l=n(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},776:(e,t,n)=>{e.exports=n.p+"e815068d369177121fd8.ttf"},516:(e,t,n)=>{e.exports=n.p+"f4921acda7402550d70e.svg"},35:(e,t,n)=>{e.exports=n.p+"3270f2c93c8c138fa6cc.svg"},666:(e,t,n)=>{e.exports=n.p+"5b4bbee2e91b8855115c.svg"},895:(e,t,n)=>{e.exports=n.p+"60e32a3f51d4e174b563.svg"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),i=n.n(a),s=n(565),c=n.n(s),d=n(216),l=n.n(d),A=n(589),p=n.n(A),u=n(28),g={};g.styleTagTransform=p(),g.setAttributes=c(),g.insert=i().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=l(),t()(u.Z,g),u.Z&&u.Z.locals&&u.Z.locals;let m=[],E=[{projectName:"Unnamed Project",currentTasks:[],completedTasks:[]}];function f(e,t){let n=function(e){const t=document.createElement("div");t.className="project-btns-container";const n=document.createElement("div");n.className="project-btns filter-white",n.id="edit-btn",n.title="Edit";const o=document.createElement("div");o.className="project-btns filter-white",o.id="del-btn",o.title="Delete",t.appendChild(n),t.appendChild(o);const r=document.createElement("li");return r.textContent=e,r.appendChild(t),r}(e);if(n.className="added-projects",n.id=n.textContent,""!=n.textContent)return t.prepend(n),t}function h(e,t){if(!e)return;const n=function(e){const t=document.createElement("div");t.className="task";const n=document.createElement("div");return n.className="checklist-task-item",n.textContent=e,t.appendChild(n),t}(e);n.classList.add("checklist-task-item");const o=n.firstChild,r=o.textContent,a=function(){const e=document.createElement("div");return e.className="task-edit-btn",e}();a.addEventListener("click",(function(){if(!t){o.contentEditable=!0,o.focus();const e=document.createRange();e.selectNodeContents(o),e.collapse(!1);const t=window.getSelection();t.removeAllRanges(),t.addRange(e)}}));const i=function(){const e=document.createElement("input");return e.type="checkbox",e}();i.classList.add("task-checkbox"),i.checked=t,i.addEventListener("change",(function(){this.checked?C.bind(this)():b.bind(this)()}));const s=document.createElement("div");return s.classList.add("edit-and-checkbox-container"),s.appendChild(a),s.appendChild(i),n.appendChild(s),t&&(n.classList.add("completed"),n.style.textDecoration="line-through",s.removeChild(a)),o.addEventListener("blur",(function(){o.contentEditable=!1;const t=o.textContent.trim();t&&(e=t,E.currentTasks.forEach((e=>{e.title===r&&(e.title=t,localStorage.setItem("projectTasks",JSON.stringify(E)),location.reload())})))})),n}function C(){let e=this.parentNode.parentNode.firstChild;console.log(`taskDescription: ${e}`),this.checked?(e.style.setProperty("text-decoration","line-through"),location.reload(),function(){let t=e.textContent,n=E[0].currentTasks.findIndex((e=>t==e.title)),[o]=E[0].currentTasks.splice(n,1);o.DateCompleted=new Date,E[0].completedTasks.push(o),localStorage.setItem("projectTasks",JSON.stringify(E))}.bind(this)()):e.style.removeProperty("text-decoration")}function b(){let e=this.parentNode.parentNode.firstChild;if(this.checked)e.style.setProperty("text-decoration","line-through");else{function t(){let t=e.textContent,n=E[0].completedTasks.findIndex((e=>e.title==t)),[o]=E[0].completedTasks.splice(n,1);delete o.DateCompleted,E[0].currentTasks.push(o),localStorage.setItem("projectTasks",JSON.stringify(E))}e.style.removeProperty("text-decoration"),location.reload(),t.call(this)}}function k(e,t){if(""!==e){let n=[],o=[];E[t].currentTasks.forEach((e=>{n.push(e.id)})),E[t].completedTasks.forEach((e=>{o.push(e.id)}));let r=1;for(;n.includes(r)||o.includes(r);)r++;let a={id:r,title:e,projectName:E[t].projectName,dateDue:new Date,timeDue:"",priority:"None",desc:""};return E[t].currentTasks.push(a),window.localStorage.setItem("projectTasks",JSON.stringify(E)),a}}new Date(2023,1,4),new Date,new Date;class y{constructor(e,t,n,o,r,a,i){this.id=e,this.title=t,this.projectName=n,this.dateDue=o,this.timeDue=r,this.priority=a,this.desc=i}}m=JSON.parse(window.localStorage.getItem("projectnames"))||["My Tasks"],console.log(`projects array: ${m}`),console.log("Type of projects array: "+typeof m),E=JSON.parse(window.localStorage.getItem("projectTasks"))||[{projectName:"My Tasks",currentTasks:[],completedTasks:[]}],console.log("projectTasks array: ",E),console.log("Type of projectTasks array: "+typeof E);const B=document.getElementById("content"),v=document.createElement("div");v.id="top-bar";const x=document.createElement("h1");x.textContent="Mas To Do",x.className="title";const j=document.createElement("div");j.id="left-side-bar";const w=document.createElement("div");w.id="projects-title",w.textContent="Projects";const T=document.createElement("div");T.id="projects-container";const N=document.createElement("ul");N.id="projects-ul";const S=document.createElement("li");S.className="add-projects",S.textContent="+ Add Project";const D=document.createElement("div");D.id="to-dos-container";const I=document.createElement("div");I.className="task-boxes-container";const Y=document.createElement("div");Y.id="current-tasks";const z=document.createElement("h2");z.className="to-do-title",z.textContent="Tasks",Y.appendChild(z);const $=document.createElement("div");$.className="to-do-boxes",Y.appendChild($);const O=document.createElement("form");O.id="add-taskbar";const W=document.createElement("input");W.id="task-input-bar",W.placeholder="Add a task to complete",O.appendChild(W);const L=document.createElement("button");L.textContent="+",L.type="submit",L.id="add-task-btn",O.appendChild(L),L.addEventListener("click",(e=>{let t=document.getElementById("task-input-bar").value;if(""!=t){document.getElementById("task-input-bar").value="";const e=new k(t,0);$.appendChild(h(e.title)),localStorage.setItem("projectTasks",JSON.stringify(E))}})),$.appendChild(O),E?.forEach((e=>{const t=e.projectName;e.currentTasks.forEach((e=>{console.log(`currentTask (${t}): ${e.title}`),$.appendChild(h(e.title))})),e.completedTasks.forEach((e=>{Array.isArray(e)?e.forEach((e=>{console.log(`completedTask (subtask) (${t}): ${e.title}`),$.appendChild(h(e.title,!0))})):(console.log(`completedTask (${t}): ${e.title}`),$.appendChild(h(e.title,!0)))}))})),document.createElement("ul").id="current-tasks-ul";const q=document.createElement("li");q.className="add-task-li",q.textContent="";const U=document.createElement("div");U.id="task-details",U.style.display="none";const P=document.createElement("h2");P.className="to-do-title",P.textContent="Details",U.appendChild(P);const Z=document.createElement("div");function M(e,...t){for(let n of t)e.appendChild(n)}Z.className="to-do-boxes",U.appendChild(Z),S.addEventListener("click",(function(){let e=prompt("Enter name of project:");return null==e||m.includes(e)||(m.push(e),window.localStorage.setItem("projectnames",JSON.stringify(m)),E.push({projectName:e,currentTasks:[],completedTasks:[]}),console.log(`projectTasks in DOMProjectAdder: ${E}`),localStorage.setItem("projectTasks",JSON.stringify(E)),f(e,N),console.log(`res value: ${e}`),window.localStorage.setItem("projectname",e)),f})),m?.forEach((e=>{f(e,N)})),M(N,S),M(T,N),M(v,x),M(B,v,j,D),M(I,Y,U),M(D,I),M(j,w,T);const J=document.querySelectorAll("#edit-btn"),R=Array.from(J);R.forEach(((e,t)=>{e.addEventListener("click",(function(){console.log(`editBtnArr[i]: ${R[t].closest(".added-projects").id}`);const e=m.indexOf(R[t].closest(".added-projects").id);console.log(e);let n=prompt("Edit name:");null==n||m.includes(n)||(console.log("This if statement executed."),m[e]=n,console.log(m),window.localStorage.setItem("projectnames",JSON.stringify(m))),document.location.reload()}))}));const X=document.querySelectorAll("#del-btn"),F=Array.from(X);F.forEach(((e,t)=>{e.addEventListener("click",(function(){let e=F[t].closest(".added-projects").id;m=function(e,t){const n=t.indexOf(e);return t.splice(n,1),location.reload(),t}(e,m),window.localStorage.setItem("projectnames",JSON.stringify(m))}))}));const V=document.querySelectorAll("div.checklist-task-item");let _=Array.from(V),H=null,G="";_.forEach(((e,t)=>{e.childNodes[0].addEventListener("click",(function(){G=_[t].textContent,console.log(`selectedTaskTitle: ${G}`);const e=function(e){console.log("editTaskDetailsDOM called"),console.log(`taskName: ${e}`);const t=E.find((t=>t.currentTasks.find((t=>(console.log(`task.title: ${t.title}`),t.title===e)))));if(t&&t.projectName&&console.log(`project.projectName: ${t.projectName}`),!t)return void console.error(`Project not found for task "${e}".`);const n=document.createElement("ul");n.id="details",n.setAttribute("data-task",e);const o=[{type:"h3",text:"Project"},{type:"select",id:"project-selector",options:[{text:"None"},...m.map((e=>({text:e})))]},{type:"h3",text:"Date Due"},{type:"input",id:"date-due",attributes:{type:"date"}},{type:"h3",text:"Task Priority"},{type:"select",id:"priority-selector",options:[{text:"None"},{text:"Low"},{text:"Medium"},{text:"High"}]},{type:"h3",text:"Time Due"},{type:"input",id:"time-due",attributes:{type:"time"}},{type:"h3",text:"Description"},{type:"textarea",id:"task-description",attributes:{placeholder:"Enter description."}}];for(const{type:e,text:t,id:r,options:a,attributes:i,title:s}of o){const o=document.createElement(e);if(t&&(o.textContent=t),r&&(o.id=r),a&&a.forEach((({text:e})=>{const t=document.createElement("option");t.textContent=e,o.appendChild(t)})),i)for(const[e,t]of Object.entries(i))o.setAttribute(e,t);s&&(o.title=s),n.appendChild(o)}const r=document.createElement("div");r.id="detail-btns";const a=[{type:"div",id:"save-btn",title:"Save Changes"},{type:"div",id:"cancel-btn",title:"Cancel Changes"},{type:"div",id:"delete-btn",title:"Delete Task"}];for(const{type:e,id:t,title:o}of a){const a=document.createElement(e);t&&(a.id=t),o&&(a.title=o),r.appendChild(a),n.appendChild(r)}const i=t.currentTasks.find((t=>t.title===e));if(console.log(`task: ${JSON.stringify(i)}`),i)return n.querySelector("#project-selector").value=i.projectName,n.querySelector("#date-due").value=i.dateDue,n.querySelector("#time-due").value=i.timeDue,n.querySelector("#priority-selector").value=i.priority,n.querySelector("#task-description").value=i.desc,n.querySelector("#save-btn").addEventListener("click",(()=>{console.log("save-btn clicked"),function(e,t){const n=E.find((e=>e.projectName===t));if(!n)return void console.error(`Project "${t}" not found.`);const o=n.currentTasks.find((t=>t.title===e));if(!o)return void console.error(`Task "${e}" not found in project "${t}".`);const r=e;console.log(`taskTitleInput: ${r}`);const a=document.getElementById("project-selector"),i=document.getElementById("date-due"),s=document.getElementById("time-due"),c=document.getElementById("priority-selector"),d=document.getElementById("task-description"),l=new y(o.id,r,a.value,i.value,s.value,c.value,d.value),A=E.find((e=>e.projectName===l.projectName));A?(A.currentTasks.push(l),n.currentTasks.splice(n.currentTasks.indexOf(o),1),console.log(`Task "${e}" edited successfully in project "${t}".`),localStorage.setItem("projectTasks",JSON.stringify(E))):console.error(`Project "${l.projectName}" not found.`)}(e,t.projectName)})),window.addEventListener("load",(()=>{const e=e=>{let t=0;for(let n=0;n<e.options.length;n++)e.options[n].text.length>t&&(t=e.options[n].text.length);e.style.width=t+4+"ch"};e(n.querySelector("#project-selector")),e(n.querySelector("#priority-selector"))})),n;console.error(`Task "${e}" not found.`)}(G),n=document.getElementById("task-details");console.log(`existingDetailsPane: ${n}`),"block"===n.style.display?console.log("Details pane already exists for this task."):Z.appendChild(e),null!=H&&(H.style.color=""),_[t].style.color="#BF40BF",U.style.display="block",H=_[t]}))})),console.log(E)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,